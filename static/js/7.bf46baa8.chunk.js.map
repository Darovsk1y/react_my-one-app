{"version":3,"sources":["components/global/FormControls/FormControls.module.css","utils/validators/validators.js","components/global/FormControls/FormControls.jsx","components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControls","Element","input","meta","props","hasError","touched","error","className","s","controls","errMessage","Input","maxLength30","LoginFormRedux","reduxForm","form","onSubmit","handleSubmit","line","Field","component","name","validate","placeholder","autoFocus","type","checkboxBlok","checkbox","captchaUrl","src","alt","captcha","captchaInput","f","formError","button","LoginContainer","formData","isAuth","authLoginThunk","email","password","rememberMe","this","to","title","Login","React","Component","LoginConnect","connect","state","auth"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,SAAW,+BAA+B,MAAQ,4BAA4B,WAAa,iCAAiC,UAAY,kC,iCCD1J,oEACO,IAAMC,EAAW,SAAAC,GACvB,IAAGA,EACH,MAAO,qBAEKC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC/C,OAAGA,GAASA,EAAMG,OAASD,EAAiB,yBAAN,OAAgCA,EAAhC,iBACjC,K,mICLOE,EAAe,SAAAC,GAAO,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBAC7DC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACC,sBAAKC,UAAWC,IAAEC,SAAU,KAAML,EAAWI,IAAEF,MAAQ,IAAvD,UACC,cAACN,EAAD,2BAAaG,GAAWF,IACvBG,GAAY,qBAAKG,UAAWC,IAAEE,WAAlB,SAA+BR,EAAKI,c,oBCNpDd,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,aAAe,4BAA4B,SAAW,wBAAwB,OAAS,sBAAsB,QAAU,uBAAuB,aAAe,8B,2JCM5PkB,EAAQZ,YAAa,SAEvBa,EAAchB,YAAiB,IAsCpBiB,EAJQC,YAAU,CAE/BC,KAAM,SAFeD,EAjCL,SAACX,GAClB,OAAO,uBAAMI,UAAWC,IAAEO,KAAMC,SAAUb,EAAMc,aAAzC,UACN,qBAAKV,UAAWC,IAAEU,KAAlB,SACC,cAACC,EAAA,EAAD,CAAOC,UAAWT,EAAOU,KAAM,QAASC,SAAU,CAAC5B,IAAUkB,GAAcW,YAAY,QAAQC,WAAW,MAE3G,qBAAKjB,UAAWC,IAAEU,KAAlB,SACC,cAACC,EAAA,EAAD,CAAOC,UAAWT,EAAOU,KAAM,WAAYC,SAAU,CAAC5B,IAAUkB,GAAcW,YAAY,WAAWE,KAAK,eAE3G,qBAAKlB,UAAWC,IAAEU,KAAlB,SACC,wBAAOX,UAAWC,IAAEkB,aAApB,UACC,cAACP,EAAA,EAAD,CAAOC,UAAW,QAASC,KAAM,aAAcd,UAAWC,IAAEmB,SAAUF,KAAK,aAC3E,wHAIDtB,EAAMyB,YAAc,qBAAKC,IAAK1B,EAAMyB,WAAYE,IAAI,UAAUvB,UAAWC,IAAEuB,UAC3E5B,EAAMyB,YAAc,qBAAKrB,UAAWC,IAAEU,KAAM,IAAIV,IAAEwB,aAA9B,SACpB,cAACb,EAAA,EAAD,CAAOC,UAAWT,EAAOU,KAAM,UAAWI,KAAK,OAAOD,WAAW,EAAMF,SAAU,CAAC5B,SAIlFS,EAAMG,MACP,8BACC,qBAAKC,UAAW0B,IAAEC,UAAlB,SACE/B,EAAMG,UAGN,GAGH,wBAAQC,UAAWC,IAAE2B,OAArB,yB,uCChCIC,E,4MACLpB,SAAW,SAACqB,IACc,IAAtB,EAAKlC,MAAMmC,QACb,EAAKnC,MAAMoC,eAAeF,EAASG,MAAOH,EAASI,SAAUJ,EAASK,WAAYL,EAASN,U,4CAI5F,WACD,OAAGY,KAAKxC,MAAMmC,OAAe,cAAC,IAAD,CAAUM,GAAI,aAEtC,sBAAKrC,UAAU,QAAf,UACE,oBAAIA,UAAWC,IAAEqC,MAAjB,mBACA,cAACC,EAAD,CAAgB9B,SAAU2B,KAAK3B,SAAUY,WAAYe,KAAKxC,MAAMyB,oB,GAZ3CmB,IAAMC,WAqB7BC,EAAeC,aAJG,SAACC,GAAD,MAAY,CACnCb,OAAQa,EAAMC,KAAKd,OACnBV,WAAYuB,EAAMC,KAAKxB,cAEwB,CAACW,oBAA5BW,CAA6Cd,GAEnDa","file":"static/js/7.bf46baa8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"FormControls_controls__p4CCh\",\"error\":\"FormControls_error__sUN7x\",\"errMessage\":\"FormControls_errMessage__2Pt9T\",\"formError\":\"FormControls_formError__198l9\"};","/* Проверка на заполненность поля */\r\nexport const required = value =>{\r\n\tif(value) return undefined;\r\n\treturn \"field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n\tif(value && value.length > maxLength) return `Max lenght message is ${maxLength} simbols`\r\n\telse return\r\n}","import s from \"./FormControls.module.css\";\r\n/* Создадим универсальную кампаненту HOC в которую будет предедаваться Element т.е \"input\" и т.п.*/\r\nexport const FormControls = Element => ({input, meta, ...props}) => {\r\n\tconst hasError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.controls +\" \"+ (hasError ? s.error : \"\")}>\r\n\t\t\t<Element {...props} {...input}></Element>\r\n\t\t\t{hasError && <div className={s.errMessage}>{meta.error}</div>}\r\n\t\t</div>\r\n\t)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__2O1CX\",\"form\":\"Login_form__2VCNh\",\"line\":\"Login_line__FknqJ\",\"checkboxBlok\":\"Login_checkboxBlok__w6vg7\",\"checkbox\":\"Login_checkbox__Sb46P\",\"button\":\"Login_button__3IcNC\",\"captcha\":\"Login_captcha__zasF7\",\"captchaInput\":\"Login_captchaInput__3iKya\"};","import s from \"./Login.module.css\";\r\nimport f from \"../global/FormControls/FormControls.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { FormControls } from \"../global/FormControls/FormControls\";\r\nimport { maxLengthCreator } from \"../../utils/validators/validators\";\r\nimport { required } from './../../utils/validators/validators';\r\n\r\nconst Input = FormControls(\"input\");\r\n\r\nlet maxLength30 = maxLengthCreator(30);\r\nconst LoginForm = (props) =>{\r\n\treturn <form className={s.form} onSubmit={props.handleSubmit}>\r\n\t\t<div className={s.line}>\r\n\t\t\t<Field component={Input} name={\"email\"} validate={[required, maxLength30]} placeholder=\"login\" autoFocus={true}/>\r\n\t\t</div>\r\n\t\t<div className={s.line}>\r\n\t\t\t<Field component={Input} name={\"password\"} validate={[required, maxLength30]} placeholder=\"password\" type=\"password\"/>\r\n\t\t</div>\r\n\t\t<div className={s.line}>\r\n\t\t\t<label className={s.checkboxBlok}>\r\n\t\t\t\t<Field component={\"input\"} name={\"rememberMe\"} className={s.checkbox} type=\"checkbox\"/>\r\n\t\t\t\t<span >запомнить меня</span>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t\t{/* Хитрый способ задания условия через && */}\r\n\t\t{props.captchaUrl && <img src={props.captchaUrl} alt=\"captcha\" className={s.captcha}/>}\r\n\t\t{props.captchaUrl && <div className={s.line +\" \"+s.captchaInput}>\r\n\t\t\t<Field component={Input} name={\"captcha\"} type=\"text\" autoFocus={true} validate={[required]}/>\r\n\t\t</div>\r\n\t\t}\r\n\r\n\t\t{props.error ? \r\n\t\t<div>\r\n\t\t\t<div className={f.formError}>\r\n\t\t\t\t{props.error}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t : \"\"\r\n\t\t}\r\n\t\t\r\n\t\t<button className={s.button}>Login</button>\r\n\t</form>\r\n}\r\nconst LoginFormRedux = reduxForm({\r\n\t// a unique name for the form\r\n  form: 'login'\r\n})(LoginForm)\r\nexport default LoginFormRedux;","import s from \"./Login.module.css\";\r\nimport LoginFormRedux from \"./Login\";\r\nimport React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { authLoginThunk } from './../../redux/auth_reducer';\r\nimport { Navigate } from \"react-router-dom\";\r\n/* Используем устаревшую билиотеку Redux-form для практики */\r\n\r\nclass LoginContainer extends React.Component {\r\n\tonSubmit = (formData) => {\r\n\t\tif(this.props.isAuth === false){\r\n\t\t\tthis.props.authLoginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n\t\t}\r\n\t}\r\n\t\r\n  render() {\r\n\tif(this.props.isAuth) return <Navigate to={\"/profile\"}/>\r\n    return (\r\n      <div className=\"login\">\r\n        <h3 className={s.title}>Login</h3>\r\n        <LoginFormRedux onSubmit={this.onSubmit} captchaUrl={this.props.captchaUrl}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlet mapDispathToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n})\r\nconst LoginConnect = connect(mapDispathToProps, {authLoginThunk})(LoginContainer);\r\n\r\nexport default LoginConnect;\r\n"],"sourceRoot":""}